


INSTALLATION


if you have not done so already, it is a good idea to setup a directory for your published python scripts so that they will be accessible from within maya.  you do this by setting the PYTHONPATH environment variable in Maya.env.  For example:

	PYTHONPATH=/Users/chad/Documents/dev/python/_published

if you want to use your current maya scripts directory simply add this to your Maya.env:

	PYTHONPATH = $MAYA_SCRIPT_PATH

then place the pymel directory in your PYTHONPATH directory.

next, to avoid having to import pymel every time you startup, if you have not done so already, you can create a userSetup.mel file, place it in your scipts directory and add this line:

	python("from pymel import *");	

Note, that if you are running a linux/unix variant, including osx, and you have your PYTHONPATH set in a shell resource file, this value will override your Maya.env value if you launch maya from the terminal.




EXAMPLES

example1.py - basic features demo
example2.py - more features demo
texturePathUI.py - fresh off the mel2py translator
texturePathUI_pymel.py - converted to use features of pymel
rwaExport - simple animation exporter. frankly i don't even know what rwa files are used for.. xsi or something
pipeGen - a procedural pipe generator

more coming....



DOCUMENTATION

the scripts themselves have fairly decent documentation. you can access this in 3 ways:

1) open the script in a text editor. the most important scripts are __init__.py, ui.py, and mel2py.py
2) check out the pymel/docs directory.  this is generated from the documentation in the above scripts
3) after importing pymel, you can ask for help on any object by using the built-in help command. for example:

	# get help on the ls command
	import pymel
	help( pymel.ls )


if you have any problems whatsoever, please feel free to contact me at  chadd@luma-pictures.com








